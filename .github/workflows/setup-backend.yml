name: Setup Terraform Backend

on:
  workflow_dispatch:
    inputs:
      bucket_name:
        description: 'S3 bucket name for Terraform state'
        required: true
        default: 'guild-terraform-state'
        type: string
      region:
        description: 'AWS region'
        required: false
        default: 'us-east-1'
        type: string
      dynamodb_table:
        description: 'DynamoDB table name for state locking'
        required: false
        default: 'terraform-state-lock'
        type: string

jobs:
  setup-backend:
    name: Setup Terraform Backend Infrastructure
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.region || 'us-east-1' }}
        
    - name: Create S3 bucket
      run: |
        BUCKET_NAME="${{ github.event.inputs.bucket_name }}"
        REGION="${{ github.event.inputs.region || 'us-east-1' }}"
        
        echo "Creating S3 bucket: $BUCKET_NAME"
        aws s3 mb s3://$BUCKET_NAME --region $REGION
        
        echo "Enabling versioning..."
        aws s3api put-bucket-versioning \
          --bucket $BUCKET_NAME \
          --versioning-configuration Status=Enabled
        
        echo "Enabling encryption..."
        aws s3api put-bucket-encryption \
          --bucket $BUCKET_NAME \
          --server-side-encryption-configuration '{
            "Rules": [
              {
                "ApplyServerSideEncryptionByDefault": {
                  "SSEAlgorithm": "AES256"
                }
              }
            ]
          }'
        
        echo "Blocking public access..."
        aws s3api put-public-access-block \
          --bucket $BUCKET_NAME \
          --public-access-block-configuration \
          BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPublicBuckets=true
        
    - name: Create DynamoDB table
      run: |
        TABLE_NAME="${{ github.event.inputs.dynamodb_table }}"
        REGION="${{ github.event.inputs.region || 'us-east-1' }}"
        
        echo "Creating DynamoDB table: $TABLE_NAME"
        aws dynamodb create-table \
          --table-name $TABLE_NAME \
          --attribute-definitions AttributeName=LockID,AttributeType=S \
          --key-schema AttributeName=LockID,KeyType=HASH \
          --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
          --region $REGION || echo "Table may already exist"
        
        echo "Waiting for table to be active..."
        aws dynamodb wait table-exists --table-name $TABLE_NAME --region $REGION
        
    - name: Output configuration
      run: |
        echo "âœ… Backend setup complete!"
        echo ""
        echo "Add these GitHub Secrets:"
        echo "TERRAFORM_STATE_BUCKET=${{ github.event.inputs.bucket_name }}"
        echo "TERRAFORM_STATE_DYNAMODB_TABLE=${{ github.event.inputs.dynamodb_table }}"
        echo ""
        echo "Or update your workflow with these values:"
        echo "bucket: ${{ github.event.inputs.bucket_name }}"
        echo "dynamodb_table: ${{ github.event.inputs.dynamodb_table }}"
